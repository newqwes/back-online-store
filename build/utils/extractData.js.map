{"version":3,"sources":["../../src/utils/extractData.js"],"names":["extractDataFromResponseDB","data","dataValues","getOrderData","cart","userId","date","Date","now","extractCartData","options","other","orderStore","map","orderData"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACO,IAAMA,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAC,IAAI,EAAI;AAC/C,MAAI,qBAAQA,IAAR,CAAJ,EAAmB;AACjB,QAAMC,WAAU,GAAG,iBAAID,IAAJ,EAAU,CAAC,CAAD,EAAI,YAAJ,CAAV,CAAnB;;AAEA,WAAOC,WAAP;AACD;;AAL8C,MAOvCA,UAPuC,GAOxBD,IAPwB,CAOvCC,UAPuC;AAS/C,MAAIA,UAAJ,EAAgB,OAAOA,UAAP;AAEhB,SAAOD,IAAP;AACD,CAZM;AAcP;AACA;AACA;AACA;AACA;AACA;;;;;AACO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,MAAP,EAAkB;AAC5C,MAAMC,IAAI,GAAGC,IAAI,CAACC,GAAL,EAAb;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,QAAGC,OAAH,QAAGA,OAAH;AAAA,QAAeC,KAAf;;AAAA,WAA2B,kDAAUD,OAAV,GAAsBC,KAAtB,GAA+B,IAA/B,CAA3B;AAAA,GAAxB;;AAEA,MAAMC,UAAU,GAAGR,IAAI,CAACS,GAAL,CAASJ,eAAT,CAAnB;AAEA,MAAMK,SAAS,GAAG;AAAER,IAAAA,IAAI,EAAJA,IAAF;AAAQD,IAAAA,MAAM,EAANA,MAAR;AAAgBO,IAAAA,UAAU,EAAVA;AAAhB,GAAlB;AAEA,SAAOE,SAAP;AACD,CAVM","sourcesContent":["import { isArray, get, omit } from 'lodash';\n\n/**\n * Returns the extracted object\n * @param {Object} data - received data from the table using Sequelize\n * @returns {Object}\n */\nexport const extractDataFromResponseDB = data => {\n  if (isArray(data)) {\n    const dataValues = get(data, [1, 'dataValues']);\n\n    return dataValues;\n  }\n\n  const { dataValues } = data;\n\n  if (dataValues) return dataValues;\n\n  return data;\n};\n\n/**\n * Returns the object prepared for writing to the database\n * @param {Array} cart - Array of all orders\n * @param {string} userId - user ID\n * @returns {Object}\n */\nexport const getOrderData = (cart, userId) => {\n  const date = Date.now();\n\n  const extractCartData = ({ options, ...other }) => omit({ ...options, ...other }, 'id');\n\n  const orderStore = cart.map(extractCartData);\n\n  const orderData = { date, userId, orderStore };\n\n  return orderData;\n};\n"],"file":"extractData.js"}