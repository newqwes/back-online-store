{"version":3,"sources":["../../src/middleware/passport.js"],"names":["dotenv","config","options","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","secretOrKey","process","env","ACCESS_TOKEN_SECRET","mwPassport","passport","use","JwtStrategy","done","id","User","findOne","where","user"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEAA,gBAAOC,MAAP;;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,cAAc,EAAEC,wBAAWC,2BAAX,EADF;AAEdC,EAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFX,CAAhB;;AAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,QAAQ,EAAI;AAC7BA,EAAAA,QAAQ,CAACC,GAAT,CACE,IAAIC,qBAAJ,CAAgBX,OAAhB;AAAA,wEAAyB,uBAAeY,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,cAAAA,EAAT,QAASA,EAAT;AAAA;AAAA;AAAA,qBAEFC,cAAKC,OAAL,CAAa;AAAEC,gBAAAA,KAAK,EAAE;AAAEH,kBAAAA,EAAE,EAAFA;AAAF;AAAT,eAAb,CAFE;;AAAA;AAEfI,cAAAA,IAFe;AAIrBA,cAAAA,IAAI,GAAGL,IAAI,CAAC,IAAD,EAAOK,IAAP,CAAP,GAAsBL,IAAI,CAAC,IAAD,EAAO,KAAP,CAA9B;AAJqB;AAAA;;AAAA;AAAA;AAAA;AAAA,+CAMd,6BAAe,GAAf,EAAoB,cAApB,cANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAzB;;AAAA;AAAA;AAAA;AAAA,MADF;AAWD,CAZD;;eAceJ,U","sourcesContent":["import { Strategy as JwtStrategy, ExtractJwt } from 'passport-jwt';\nimport dotenv from 'dotenv';\nimport User from '../database/models/user';\nimport createResponse from '../utils/createResponse';\n\ndotenv.config();\n\nconst options = {\n  jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n  secretOrKey: process.env.ACCESS_TOKEN_SECRET,\n};\n\nconst mwPassport = passport => {\n  passport.use(\n    new JwtStrategy(options, async ({ id }, done) => {\n      try {\n        const user = await User.findOne({ where: { id } });\n\n        user ? done(null, user) : done(null, false);\n      } catch (error) {\n        return createResponse(500, 'Server Error', error);\n      }\n    }),\n  );\n};\n\nexport default mwPassport;\n"],"file":"passport.js"}