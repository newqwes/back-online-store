{"version":3,"sources":["../../src/services/orderService.js"],"names":["OrderService","req","body","userId","cart","orderData","Order","create","include","model","OrderStore","as","findAll","where","orders","orderId","destroy","isFound"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;IAEMA,Y;;;;;;;;kGACcC,G;;;;;;;AAENC,gBAAAA,I,GAASD,G,CAATC,I;AAEFC,gBAAAA,M,GAAS,qBAAUF,GAAV,C;;qBAEXE,M;;;;;AACMC,gBAAAA,I,GAASF,I,CAATE,I;AACFC,gBAAAA,S,GAAY,+BAAaD,IAAb,EAAmBD,MAAnB,C;;uBAEZG,eAAMC,MAAN,CAAaF,SAAb,EAAwB;AAC5BG,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,KAAK,EAAEC,mBAAT;AAAqBC,oBAAAA,EAAE,EAAE;AAAzB;AADmB,iBAAxB,C;;;AAKR,yCAAO,2BAAaT,IAAb,CAAP;iDAEO,6BAAe,GAAf,EAAoB,eAApB,EAAqCA,IAArC,C;;;;;iDAEA,6BAAe,GAAf,EAAoB,cAApB,c;;;;;;;;;;;;;;;;;;;qGAISD,G;;;;;;;AAEVE,gBAAAA,M,GAAS,qBAAUF,GAAV,C;;uBAEMK,eAAMM,OAAN,CAAc;AACjCC,kBAAAA,KAAK,EAAE;AAAEV,oBAAAA,MAAM,EAANA;AAAF,mBAD0B;AAEjCK,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,KAAK,EAAEC,mBAAT;AAAqBC,oBAAAA,EAAE,EAAE;AAAzB;AAFwB,iBAAd,C;;;AAAfG,gBAAAA,M;kDAKC,6BAAe,GAAf,EAAoB,eAApB,EAAqCA,MAArC,C;;;;;kDAEA,6BAAe,GAAf,EAAoB,cAApB,e;;;;;;;;;;;;;;;;;;;uGAIWC,O;;;;;;;;uBAEIT,eAAMU,OAAN,CAAc;AAAEH,kBAAAA,KAAK,EAAE;AAAEE,oBAAAA,OAAO,EAAPA;AAAF;AAAT,iBAAd,C;;;AAAhBE,gBAAAA,O;;qBAEFA,O;;;;;kDAAgB,6BAAe,GAAf,EAAoB,eAApB,EAAqCF,OAArC,C;;;kDAEb,6BAAe,GAAf,EAAoB,WAApB,EAAiCA,OAAjC,C;;;;;kDAEA,6BAAe,GAAf,EAAoB,cAApB,e;;;;;;;;;;;;;;;;;;;;;eAKE,IAAIf,YAAJ,E","sourcesContent":["import { getUserId } from '../utils/user';\nimport mailer from '../utils/nodemailer';\nimport orderMessage from '../utils/orderMessage';\nimport createResponse from '../utils/createResponse';\nimport { getOrderData } from '../utils/extractData';\n\nimport OrderStore from '../database/models/orderStore';\nimport Order from '../database/models/order';\n\nclass OrderService {\n  async createOrder(req) {\n    try {\n      const { body } = req;\n\n      const userId = getUserId(req);\n\n      if (userId) {\n        const { cart } = body;\n        const orderData = getOrderData(cart, userId);\n\n        await Order.create(orderData, {\n          include: { model: OrderStore, as: 'orderStore' },\n        });\n      }\n\n      mailer(orderMessage(body));\n\n      return createResponse(201, 'Successfully!', body);\n    } catch (error) {\n      return createResponse(500, 'Server Error', error);\n    }\n  }\n\n  async getUserOrders(req) {\n    try {\n      const userId = getUserId(req);\n\n      const orders = await Order.findAll({\n        where: { userId },\n        include: { model: OrderStore, as: 'orderStore' },\n      });\n\n      return createResponse(200, 'Successfully!', orders);\n    } catch (error) {\n      return createResponse(500, 'Server Error', error);\n    }\n  }\n\n  async deleteUserOrder(orderId) {\n    try {\n      const isFound = await Order.destroy({ where: { orderId } });\n\n      if (isFound) return createResponse(200, 'Successfully!', orderId);\n\n      return createResponse(404, 'Not found', orderId);\n    } catch (error) {\n      return createResponse(500, 'Server Error', error);\n    }\n  }\n}\n\nexport default new OrderService();\n"],"file":"orderService.js"}