{"version":3,"sources":["../src/index.js"],"names":["dotenv","config","app","use","express","json","passport","initialize","authRoute","productsRoute","orderRoute","userRoute","port","process","env","SERVER_PORT","swaggerUi","serve","setup","swaggerDocument","listen","console","log","sequelize","authenticate"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;AAEAA,gBAAOC,MAAP;;AACA,IAAMC,GAAG,GAAG,uBAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,qBAAO,KAAP,CAAR;AACAD,GAAG,CAACC,GAAJ,CAAQ,oBAAR;AACAD,GAAG,CAACC,GAAJ,CAAQC,iBAAQC,IAAR,EAAR;AAEAH,GAAG,CAACC,GAAJ,CAAQG,kBAASC,UAAT,EAAR;AACA,wBAAWD,iBAAX;AAEAJ,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBK,kBAArB;AACAN,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAyBM,sBAAzB;AACAP,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBO,mBAAtB;AACAR,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBQ,kBAArB;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAAzB;AAEAb,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBa,0BAAUC,KAA/B,EAAsCD,0BAAUE,KAAV,CAAgBC,gBAAhB,CAAtC;AAEAjB,GAAG,CAACkB,MAAJ,CAAWR,IAAX,uEAAiB;AAAA;AAAA;AAAA;AAAA;AACfS,UAAAA,OAAO,CAACC,GAAR,uCAA2CV,IAA3C;AADe;AAAA,iBAETW,kBAAUC,YAAV,EAFS;;AAAA;AAGfH,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["import dotenv from 'dotenv';\nimport express from 'express';\nimport passport from 'passport';\nimport morgan from 'morgan';\nimport cors from 'cors';\nimport swaggerUi from 'swagger-ui-express';\n\nimport sequelize from './database';\nimport swaggerDocument from '../swagger.json';\nimport mwPassport from './middleware/passport';\n\nimport authRoute from './routes/authRoute';\nimport orderRoute from './routes/orderRoute';\nimport productsRoute from './routes/productsRoute';\nimport userRoute from './routes/userRoute';\n\ndotenv.config();\nconst app = express();\n\napp.use(morgan('dev'));\napp.use(cors());\napp.use(express.json());\n\napp.use(passport.initialize());\nmwPassport(passport);\n\napp.use('/api/auth', authRoute);\napp.use('/api/products', productsRoute);\napp.use('/api/order', orderRoute);\napp.use('/api/user', userRoute);\n\nconst port = process.env.SERVER_PORT;\n\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\n\napp.listen(port, async () => {\n  console.log(`Server is listening on port ${port}...`);\n  await sequelize.authenticate();\n  console.log('Database Connected!');\n});\n"],"file":"index.js"}