{"version":3,"sources":["../../src/routes/authRoute.js"],"names":["authRoute","express","Router","process","env","GUEST_ROLE","USER_ROLE","ADMIN_ROLE","post","login","register"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;;;AAEA,IAAMA,SAAS,GAAGC,iBAAQC,MAAR,EAAlB;;mBAE8CC,OAAO,CAACC,G;IAA9CC,U,gBAAAA,U;IAAYC,S,gBAAAA,S;IAAWC,U,gBAAAA,U;AAE/BP,SAAS,CAACQ,IAAV,CAAe,QAAf,EAAyB,wBAAU,CAACF,SAAD,EAAYC,UAAZ,EAAwBF,UAAxB,CAAV,CAAzB,EAAyEI,qBAAzE;AAEAT,SAAS,CAACQ,IAAV,CAAe,WAAf,EAA4B,wBAAU,CAACF,SAAD,EAAYC,UAAZ,EAAwBF,UAAxB,CAAV,CAA5B,EAA4EK,wBAA5E;eAEeV,S","sourcesContent":["import express from 'express';\n\nimport checkRole from '../middleware/checkRole';\n\nimport { login, register } from '../controllers/authController';\n\nconst authRoute = express.Router();\n\nconst { GUEST_ROLE, USER_ROLE, ADMIN_ROLE } = process.env;\n\nauthRoute.post('/login', checkRole([USER_ROLE, ADMIN_ROLE, GUEST_ROLE]), login);\n\nauthRoute.post('/register', checkRole([USER_ROLE, ADMIN_ROLE, GUEST_ROLE]), register);\n\nexport default authRoute;\n"],"file":"authRoute.js"}