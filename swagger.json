{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Online Store",
    "description": "My Online Store API. \n There are 3 roles admin, user and guest. \n Token contains user id."
  },
  "schemes": ["http"],
  "host": "still-taiga-60706.herokuapp.com",
  "basePath": "/api/",
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "Bearer": {
      "description": "Key like, example: `Bearer eyJhbGciOiJIUzI1N...`",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },

  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/userRegister"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/userResponse"
            }
          }
        }
      }
    },

    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "description": "login to system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "type": "object",
            "description": "login to system",
            "schema": {
              "$ref": "#/definitions/userLogin"
            }
          }
        ],
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "You are logged in successfully",
            "schema": {
              "$ref": "#/definitions/userResponse"
            }
          }
        }
      }
    },

    "/user": {
      "get": {
        "summary": "Get user data based on his ID",
        "tags": ["User"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/userResponse"
            }
          }
        }
      },
      "put": {
        "summary": "Update user with give ID",
        "tags": ["User"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/UserEdit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/userResponse"
            }
          }
        }
      }
    },

    "/user/delete": {
      "delete": {
        "summary": "Delete user",
        "tags": ["User"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/emptySchema"
            }
          }
        }
      }
    },

    "/products": {
      "get": {
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "description": "TYPE of product that we want to find",
            "type": "string"
          }
        ],
        "summary": "Get ALL products by TYPE",
        "tags": ["Products"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          }
        }
      },

      "post": {
        "summary": "Add new product",
        "tags": ["Edit product with auth"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "description": "Product with new values of properties",
            "schema": {
              "$ref": "#/definitions/createProduct"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product is created",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      }
    },

    "/products/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of product that we want to find",
          "type": "integer"
        }
      ],
      "get": {
        "summary": "Get product by ID",
        "tags": ["Products"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete product by ID",
        "tags": ["Edit product with auth"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Product was deleted",
            "schema": {
              "$ref": "#/definitions/emptySchema"
            }
          }
        }
      },
      "put": {
        "summary": "Update product with give ID",
        "tags": ["Edit product with auth"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "description": "Product with new values of properties",
            "schema": {
              "$ref": "#/definitions/updateProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product is updated",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      }
    },

    "/order": {
      "post": {
        "summary": "Send order",
        "tags": ["Order"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "description": "New order",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order is sended",
            "schema": {
              "$ref": "#/definitions/orderResponse"
            }
          }
        }
      },
      "get": {
        "summary": "Get ID of user that we want to find his all Order",
        "tags": ["Order"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/orderHistoryResponse"
            }
          }
        }
      }
    },

    "/order/delete/{orderId}": {
      "delete": {
        "summary": "Delete one order of user",
        "tags": ["Order"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "Order ID which we want to delete",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Order is deleted",
            "schema": {
              "$ref": "#/definitions/emptySchema"
            }
          }
        }
      }
    }
  },

  "definitions": {
    "userLogin": {
      "required": ["password", "email"],
      "properties": {
        "password": {
          "type": "string",
          "default": "admin"
        },
        "email": {
          "type": "string",
          "default": "newnewqwes@gmail.com"
        }
      }
    },

    "userRegister": {
      "required": ["password", "email", "login", "phone"],
      "properties": {
        "password": {
          "type": "string",
          "default": "admin"
        },
        "email": {
          "type": "string",

          "default": "newqwes@mail.ru"
        },
        "login": {
          "type": "string",
          "default": "Иванов Иван Иванович"
        },
        "phone": {
          "type": "string",
          "default": "+375123456789"
        }
      }
    },

    "userResponse": {
      "properties": {
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "login": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "street": {
              "type": "string"
            },
            "home": {
              "type": "string"
            },
            "apartment": {
              "type": "string"
            },
            "token": {
              "type": "string"
            }
          }
        }
      }
    },

    "User": {
      "required": ["login", "password", "email", "phone"],
      "properties": {
        "login": {
          "type": "string",
          "default": "Сидоров Сидор"
        },
        "password": {
          "type": "string",
          "default": "admin"
        },
        "email": {
          "type": "string",
          "default": "newqwes@mail.ru"
        },
        "phone": {
          "type": "string",
          "default": "+37533333323"
        },
        "type": {
          "type": "string",
          "default": "user"
        },
        "city": {
          "type": "string",
          "default": "Гродно"
        },
        "street": {
          "type": "string",
          "default": "Лермонтова"
        },
        "home": {
          "type": "string",
          "default": "29"
        },
        "apartment": {
          "type": "string",
          "default": "313"
        }
      }
    },

    "UserEdit": {
      "properties": {
        "login": {
          "type": "string",
          "default": "Сидоров Сидор"
        },
        "email": {
          "type": "string",
          "default": "newqwes@mail.ru"
        },
        "phone": {
          "type": "string",
          "default": "+37533333323"
        },
        "city": {
          "type": "string",
          "default": "Гродно"
        },
        "street": {
          "type": "string",
          "default": "Лермонтова"
        },
        "home": {
          "type": "string",
          "default": "29"
        },
        "apartment": {
          "type": "string",
          "default": "313"
        }
      }
    },

    "orderHistoryResponse": {
      "required": ["status", "message", "data"],
      "properties": {
        "message": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "userId": {
              "type": "string"
            },
            "date": {
              "type": "string"
            },
            "orderStore": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "uniqueItems": true
                  },
                  "orderId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "photoUrl": {
                    "type": "string"
                  },
                  "unitSign": {
                    "type": "string"
                  },
                  "currencySign": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number",
                    "format": "float"
                  },
                  "weight": {
                    "type": "number",
                    "format": "float"
                  },
                  "count": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },

    "orderResponse": {
      "properties": {
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Order"
        }
      }
    },

    "Order": {
      "required": ["cart", "customer"],
      "properties": {
        "cart": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "format": "float",
                "default": "1"
              },
              "currencySign": {
                "type": "string",
                "default": "р."
              },
              "description": {
                "type": "string",
                "default": "Небольшое описание продукта"
              },
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string",
                "default": "Паперони"
              },
              "photoUrl": {
                "type": "string",
                "default": "https://www.test.ru/test2.jpg"
              },
              "type": {
                "type": "string",
                "default": "pizza"
              },
              "unitSign": {
                "type": "string",
                "default": "гр"
              },
              "options": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "default": 12.35
                  },
                  "weight": {
                    "type": "number",
                    "format": "float",
                    "default": 220.55
                  },
                  "productId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "customer": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "default": "user"
            },
            "login": {
              "type": "string",
              "default": "Иван Иваныч"
            },
            "phone": {
              "type": "string",
              "default": "+375238453948"
            },
            "token": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "default": "newqwes@mail.ru"
            },
            "city": {
              "type": "string",
              "default": "Гродно"
            },
            "home": {
              "type": "string",
              "default": "17"
            },
            "street": {
              "type": "string",
              "default": "Кремко"
            },
            "apartment": {
              "type": "string",
              "default": "23"
            }
          }
        }
      }
    },

    "createProduct": {
      "required": ["name", "description", "photoUrl", "unitSign", "currencySign"],
      "properties": {
        "name": {
          "type": "string",
          "default": "Пеперони острая NEW"
        },
        "description": {
          "type": "string",
          "default": "Описание для Пеперони острая NEW"
        },
        "type": {
          "type": "string",
          "default": "pizza"
        },
        "photoUrl": {
          "type": "string",
          "default": "https://www.test.ru/test2.jpg"
        },
        "unitSign": {
          "type": "string",
          "default": "гр"
        },
        "currencySign": {
          "type": "string",
          "default": "р."
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "price": {
                "type": "number",
                "format": "float",
                "default": 12.33
              },
              "weight": {
                "type": "number",
                "format": "float",
                "default": 123.33
              }
            }
          }
        }
      }
    },

    "updateProduct": {
      "properties": {
        "name": {
          "type": "string",
          "default": "Мексиканская"
        },
        "type": {
          "type": "string",
          "default": "pizza"
        },
        "description": {
          "type": "string",
          "default": "Описание для Мексиканской"
        },
        "photoUrl": {
          "type": "string",
          "default": "https://www.test.ru/test.jpg"
        },
        "unitSign": {
          "type": "string",
          "default": "гр"
        },
        "currencySign": {
          "type": "string",
          "default": "р."
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "price": {
                "type": "number",
                "format": "float",
                "default": 12.33
              },
              "weight": {
                "type": "number",
                "format": "float",
                "default": 123.33
              }
            }
          }
        }
      }
    },

    "Products": {
      "required": ["status", "message", "data"],
      "properties": {
        "message": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "uniqueItems": true
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "photoUrl": {
                "type": "string"
              },
              "unitSign": {
                "type": "string"
              },
              "currencySign": {
                "type": "string"
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "uniqueItems": true
                    },
                    "price": {
                      "type": "number",
                      "format": "float"
                    },
                    "weight": {
                      "type": "number",
                      "format": "float"
                    },
                    "productId": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "Product": {
      "required": ["status", "message", "data"],
      "properties": {
        "message": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "uniqueItems": true
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "photoUrl": {
              "type": "string"
            },
            "unitSign": {
              "type": "string"
            },
            "currencySign": {
              "type": "string"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "uniqueItems": true
                  },
                  "price": {
                    "type": "number",
                    "format": "float"
                  },
                  "weight": {
                    "type": "number",
                    "format": "float"
                  },
                  "productId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },

    "emptySchema": {
      "required": ["status", "message", "data"],
      "properties": {
        "message": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
